{"version":3,"sources":["Task.jsx","App.js","index.js"],"names":["Task","useState","tasks","setTasks","inp","setInp","taskList","map","todo","idx","id","onClick","promptValue","prompt","lst","task","index","handleEditClick","removeTasks","filter","handleDeleteClick","copyTasks","val","console","log","handleUpClick","length","handleDownClick","className","type","value","onChange","e","currentTarget","placeholder","preventDefault","App","ReactDOM","render","document","getElementById"],"mappings":"yPAuFeA,EAnFF,WAET,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KAwDMC,EAAWJ,EAAMK,KAAI,SAACC,EAAMC,GAC9B,OAAO,+BACFD,EACD,wBAAQE,GAAG,OAAOC,QAAS,kBAxCX,SAACH,EAAMC,GAC3B,IAAMG,EAAcC,OAAO,cAAeL,GAC1C,GAAoB,OAAhBI,EAAsB,CACtB,IAAME,EAAMZ,EAAMK,KAAI,SAACQ,EAAMC,GACzB,OAAQP,IAAQO,EAAQD,EAAOH,KAEnCT,EAASW,IAkCwBG,CAAgBT,EAAMC,IAAvD,kBACA,wBAAQC,GAAG,MAAMC,QAAS,kBAhDR,SAACF,GACvB,IAAMS,EAAchB,EAAMiB,QAAO,SAACJ,EAAMC,GACpC,OAAOA,IAAUP,KAErBN,EAASe,GA4C2BE,CAAkBX,IAAlD,oBACA,wBAAQC,GAAG,KAAKC,QAAS,kBAnBX,SAACF,GACnB,GAAIA,EAAM,KAAO,EAAG,CAChB,IAAMY,EAAYnB,EAAMK,KAAI,SAACQ,GACzB,OAAOA,KAELO,EAAMD,EAAUZ,GACtBY,EAAUZ,GAAOY,EAAUZ,EAAM,GACjCY,EAAUZ,EAAM,GAAKa,EACrBnB,EAASkB,QAGTE,QAAQC,IAAI,QAQmBC,CAAchB,IAA7C,qBACA,wBAAQC,GAAG,OAAOC,QAAS,kBAlCX,SAACF,GACrB,GAAIA,EAAM,IAAMP,EAAMwB,OAAQ,CAC1B,IAAML,EAAYnB,EAAMK,KAAI,SAACQ,GACzB,OAAOA,KAELO,EAAMD,EAAUZ,GACtBY,EAAUZ,GAAOY,EAAUZ,EAAM,GACjCY,EAAUZ,EAAM,GAAKa,EACrBnB,EAASkB,QAGTE,QAAQC,IAAI,QAuBqBG,CAAgBlB,IAAjD,yBALYA,MAQpB,OACI,sBAAKC,GAAG,OAAOkB,UAAU,YAAzB,UACI,uBACIC,KAAK,OACLC,MAAO1B,EACP2B,SApEU,SAACC,GACnB3B,EAAO2B,EAAEC,cAAcH,QAoEfI,YAAY,gBAChB,wBAAQxB,GAAG,SAASC,QAnEN,SAACqB,GACnBA,EAAEG,iBACU,KAAR/B,GACAD,EAAS,GAAD,mBAAKD,GAAL,CAAYE,KAExBC,EAAO,KA8DH,iBACA,6BACKC,QCrEF8B,EARL,WACR,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCFNS,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1c1893de.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './Task.css'\r\n\r\nconst Task = () => {\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n    const [inp, setInp] = useState('');\r\n\r\n    const changeHandler = (e) => {\r\n        setInp(e.currentTarget.value);\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (inp !== \"\") {\r\n            setTasks([...tasks, inp]);\r\n        }\r\n        setInp(\"\");\r\n    }\r\n    const handleDeleteClick = (idx) => {\r\n        const removeTasks = tasks.filter((task, index) => {\r\n            return index !== idx;\r\n        });\r\n        setTasks(removeTasks);\r\n    };\r\n\r\n    const handleEditClick = (todo, idx) => {\r\n        const promptValue = prompt(\"Update task\", todo);\r\n        if (promptValue !== null) {\r\n            const lst = tasks.map((task, index) => {\r\n                return (idx !== index ? task : promptValue);\r\n            });\r\n            setTasks(lst);\r\n        }\r\n    }\r\n    const handleDownClick = (idx) => {\r\n        if (idx + 1 !== tasks.length) {\r\n            const copyTasks = tasks.map((task) => {\r\n                return task;\r\n            })\r\n            const val = copyTasks[idx];\r\n            copyTasks[idx] = copyTasks[idx + 1];\r\n            copyTasks[idx + 1] = val;\r\n            setTasks(copyTasks);\r\n        }\r\n        else {\r\n            console.log(\"Work\");\r\n        }\r\n    }\r\n    const handleUpClick = (idx) => {\r\n        if (idx - 1 !== -1) {\r\n            const copyTasks = tasks.map((task) => {\r\n                return task;\r\n            })\r\n            const val = copyTasks[idx];\r\n            copyTasks[idx] = copyTasks[idx - 1];\r\n            copyTasks[idx - 1] = val;\r\n            setTasks(copyTasks);\r\n        }\r\n        else {\r\n            console.log(\"boss\");\r\n        }\r\n    }\r\n    const taskList = tasks.map((todo, idx) => {\r\n        return <li key={idx}>\r\n            {todo}\r\n            <button id=\"edit\" onClick={() => handleEditClick(todo, idx)}>Edit</button>\r\n            <button id=\"del\" onClick={() => handleDeleteClick(idx)}>Delete</button>\r\n            <button id=\"up\" onClick={() => handleUpClick(idx)}>Move Up</button>\r\n            <button id=\"down\" onClick={() => handleDownClick(idx)}>Move Down</button>\r\n        </li>\r\n    })\r\n    return (\r\n        <div id=\"main\" className=\"container\">\r\n            <input\r\n                type=\"text\"\r\n                value={inp}\r\n                onChange={changeHandler}\r\n                placeholder=\"TYPE A TASK\" />\r\n            <button id=\"tskbtn\" onClick={submitHandler}>ADD</button>\r\n            <ul>\r\n                {taskList}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Task;","import React from 'react';\n\nimport './App.css';\nimport Task from './Task.jsx';\nconst App=()=>{\n  return (\n    <div className=\"App\">\n      <Task/>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}